<script src="bootstrap.bundle.min.js"></script>
<script src="feather.min.js"></script>
<script src="Chart.min.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function(){
        "use strict"
        const selectOption = document.getElementById("select-option")
        const myChart = document.getElementById("myChart")

        feather.replace({ "aria-hidden": "true" })        

        const replaceStringForNumber = value => {
            if(value === "No Data"){
                return 0
            }
            return Number(value.replace(/,|\+/g, ""))
        }

        const getEssentialKeys = key => {
            return key === "Total Cases" || key === "Total Deaths" || key === "Total Recovered" || key === "Total Tests" || key === "Population"
        }

        const items = JSON.parse('<%- item %>')  
        const keys = Object.keys(items[0]).filter(getEssentialKeys)
        const values = keys.map(key => items[0][key])
        const newValues = values.map(replaceStringForNumber)

        const chartConfig = {
            type: "bar",
            data: {
                labels: keys,
                datasets: [{
                    data: newValues,
                    lineTension: 0,
                    backgroundColor: [
                        '#ffa500',
                        '#ff0000',
                        '#ffff00',
                        '#008000',
                        '#0000ff',
                    ],
                    borderColor: [
                        '#ffa500',
                        '#ff0000',
                        '#ffff00',
                        '#008000',
                        '#0000ff',
                    ],
                    borderWidth: 4,
                    pointBackgroundColor: '#007bff'
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        type: "logarithmic",
                        ticks: {
                            callback: function(value, index, values){
                                if (value === 100000000) return "100M"
                                if (value === 10000000) return "10M"
                                if (value === 1000000) return "1M"
                                if (value === 100000) return "100K"
                                if (value === 10000) return "10K"
                                if (value === 1000) return "1K"
                                if (value === 100) return "100"
                                if (value === 10) return "10"
                                if (value === 1) return "1"
                                return null
                            }
                        }
                    }]
                },
                legend: {
                    display: false
                }                
            }
        }

        const dummyChart = new Chart(myChart, chartConfig)

        selectOption.addEventListener("change", e => {
            const value = e.target.value 
            if(value === "select"){
                return 
            } else {                  
                const dataValues = dummyChart.data.datasets[0].data 
                const wasSelected = items.filter(item => item["Country Other"] === value)              
            
                const valuesFromWasSelected = keys.map(key => wasSelected[0][key])      
                const newValuesFromSelectedItem = valuesFromWasSelected.map(replaceStringForNumber)

                for(let i = 0; i < dataValues.length; i++){
                    dataValues[i] = newValuesFromSelectedItem[i]
                }

                dummyChart.update()
            }
        })
    })
</script>